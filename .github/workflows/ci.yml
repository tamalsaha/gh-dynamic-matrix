name: CI

on:
  issue_comment:
    types: [created]

jobs:
  job1:
    if: contains(github.event.issue.html_url, '/pull/') && startsWith(github.event.comment.body, '/ok-to-test')
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Prepare host
        run: |
          # https://github.com/jpmens/jo
          sudo apt-get install jo

      - id: set-matrix
        run: |
          k8s=(v1.12.10 v1.14.10 v1.16.9 v1.18.4)
          db=(7.3.2 7.2.0 6.8.0 6.5.3 6.4.0 6.3.0-v1 6.2.4-v1 5.6.4-v1)

          IFS=' '
          read -ra M <<< "${{ github.event.comment.body }}"
          if [ ! -z ${M[1]} ]; then
            k8s=(${M[1]})
          fi
          if [ ! -z ${M[2]} ]; then
            db=(${M[2]})
          fi

          function join { local IFS="$1"; shift; echo "$*"; }
          matrix=()
          for x in ${k8s[@]}; do
              for y in ${db[@]}; do
                  matrix+=( $(jo k8s=$x db=$y) )
              done
          done
          matrix=$(echo "{\"include\":[$(join , ${matrix[@]})]}" | sed -r 's/"/\\"/g')
          echo $matrix
          echo "::set-output name=matrix::$matrix"
          echo "::set-output name=works::{\"include\":[{\"project\":\"foo\",\"config\":\"Debug\"},{\"project\":\"bar\",\"config\":\"Release\"}]}"

      - id: test
        run: |
          echo ${{ steps.set-matrix.outputs.works }}
          echo ${{ fromJson(steps.set-matrix.outputs.works) }}

  build:
    needs: job1
    runs-on: ubuntu-latest
    strategy:
      matrix: #${{fromJson(needs.job1.outputs.matrix)}}
        include:
          - k8s: v1.18.4
            db: 7.3.2
          - k8s: v1.18.4
            db: 7.2.0
          - k8s: v1.18.4
            db: 6.8.0
          - k8s: v1.18.4
            db: 6.5.3
          - k8s: v1.18.4
            db: 6.4.0
          - k8s: v1.18.4
            db: 6.3.0-v1
          - k8s: v1.18.4
            db: 6.2.4-v1
          - k8s: v1.18.4
            db: 5.6.4-v1
    steps:
      - uses: actions/checkout@v2

      - name: Run a one-line script
        run: echo Hello, world!

      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
