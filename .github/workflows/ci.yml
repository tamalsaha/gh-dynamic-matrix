name: CI

on:
  issue_comment:
    types: [created]

jobs:
  config:
    if: contains(github.event.issue.html_url, '/pull/') && startsWith(github.event.comment.body, '/ok-to-test')
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Prepare host
        run: |
          # https://github.com/jpmens/jo
          sudo apt-get install jo

      - id: set-matrix
        name: Generate test matrix
        run: |
          k8s=(v1.12.10 v1.14.10 v1.16.9 v1.18.4)
          db=(7.3.2 7.2.0 6.8.0 6.5.3 6.4.0 6.3.0-v1 6.2.4-v1 5.6.4-v1)

          IFS=' '
          read -ra COMMENT <<< "${{ github.event.comment.body }}"
          if [ ! -z ${COMMENT[1]} ] && [ ${COMMENT[1]} != "*" ]; then
            k8s=(${COMMENT[1]})
          fi
          if [ ! -z ${COMMENT[2]} ]; then
            db=(${COMMENT[2]})
          fi

          matrix=()
          for x in ${k8s[@]}; do
              for y in ${db[@]}; do
                  matrix+=( $(jo k8s=$x db=$y) )
              done
          done

          # https://zaiste.net/posts/how-to-join-elements-of-array-bash/
          function join { local IFS="$1"; shift; echo "$*"; }
          matrix=$(echo "{"include":[$(join , ${matrix[@]})]}")
          echo $matrix
          echo "::set-output name=matrix::$matrix"


          # echo "::set-output name=works::{\"include\":[{\"project\":\"foo\",\"config\":\"Debug\"},{\"project\":\"bar\",\"config\":\"Release\"}]}"

      - id: test
        run: |
          echo '${{ steps.set-matrix.outputs.matrix }}'
          echo "_____________________________________________________"

  build:
    needs: config
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.config.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v2

      - name: Run a one-line script
        run: echo Hello, world!

      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
